version: '3.7'

services:

  traefik:
    image: devync/traefik
    build: ./traefik
    ports:
      - 4210:80
      - 4220:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=PathPrefix:/api"
      - "traefik.port=8080"

  jupyterhub:
    build: ./notebook/                # Build the container from this folder.
    image: devync/jupyterhub
    container_name: jupyterhub   # The service will use this container name.
    volumes:                         # Give access to Docker socket.
      - /var/run/docker.sock:/var/run/docker.sock
      - jupyterhub_data:/srv/jupyterhub
    environment:                     # Env variables passed to the Hub process.
      DOCKER_NETWORK_NAME: ${COMPOSE_PROJECT_NAME}_default
      HUB_IP: ai.cen.centeva.com
      DOCKER_JUPYTER_IMAGE: jupyter/tensorflow-notebook
    labels:                          # Traefik configuration.
      - "traefik.enable=true"
      - "traefik.frontend.rule=PathPrefix:/hub"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}_default"
    networks:
      default:
      jupyter:
        aliases:
          - jupyterhub

  jupyterlab:
    image: jupyter/tensorflow-notebook
    command: echo

volumes:
  jupyterhub_data:

networks:
  jupyter:
    internal: true

  # proxy:
  #   image: devync/ai-reverse-proxy
  #   build: ./nginx/
  #   container_name: ai-proxy
  #   deploy:
  #     replicas: 3
  #     restart_policy:
  #       condition: on-failure
  #   # ports:
  #     # - 4210:4210
  #   environment:
  #     VERSION: latest

  # notebook:
  #   # depends_on:
  #   #   - traefik
  #   image: devync/jupyterhub
  #   build: ./notebook/
  #   command: -f /etc/jupyterhub/jupyterhub_config.py
  #   ports:
  #     - 4210:8888
  #   deploy:
  #     replicas: 3
  #     restart_policy:
  #       condition: on-failure